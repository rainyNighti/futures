# --- 0. 变量定义区 ---
target_columns: &target_columns
  - 'T_5'
  - 'T_10'
  - 'T_20'
  
# 是否强制重新处理数据（忽略缓存）
force_reprocess: false

# 定义要执行的预处理步骤及其顺序
preprocess_config:
  trade:
    - type: 'aggregate_major_contracts' # 函数名
    - type: 'add_historical_features' 
    - type: 'create_target_feature'
      source_column: '收盘价_主力合约'

base_global_pipeline: &base_global_pipeline
  # 魔法列处理
  - type: "add_date_info"

  # 使用的列
  - type: "update_used_fields"
    use_fields:
      - 'T_5'
      - 'T_10'
      - 'T_20'
      - '开盘价_主力合约'
      - '收盘价_主力合约'
      - '结算价_主力合约'
      - '持仓量_主力合约'
      - '成交量_主力合约'
      - '最高价_主力合约'
      - '最低价_主力合约'
      - '开盘价_次大合约'
      - '收盘价_次大合约'
      - '结算价_次大合约'
      - '持仓量_次大合约'
      - '成交量_次大合约'
      - '最高价_次大合约'
      - '最低价_次大合约'
      - '开盘价_第三大合约'
      - '收盘价_第三大合约'
      - '结算价_第三大合约'
      - '持仓量_第三大合约'
      - '成交量_第三大合约'
      - '最高价_第三大合约'
      - '最低价_第三大合约'
      - 'month'

  # 缺失值处理
  - type: "handle_missing_values_for_oil_data"
    
# --- 1. 全局与路径设置 ---
# 提交时修改为 /app/input/
base_data_dir: 'data/'
model_save_dir: 'saved_models'
experiment_name: 'baseline'

# --- 2. 数据加载设置 ---
data_loader:
  trade_data:
    brent: '赛题数据发布/赛道一/交易数据/赛道一_Brent交易数据.csv'
    sc: '赛题数据发布/赛道一/交易数据/赛道一_SC交易数据.csv'
    wti: '赛题数据发布/赛道一/交易数据/赛道一_WTI交易数据.csv'
  target_columns: *target_columns
  fundamental_data_paths:
    - '赛题数据发布/赛道一/基本面数据/基本面数据_供应.csv'
    - '赛题数据发布/赛道一/基本面数据/基本面数据_宏观.csv'
    - '赛题数据发布/赛道一/基本面数据/基本面数据_基金持仓.csv'
    - '赛题数据发布/赛道一/基本面数据/基本面数据_库存.csv'
    - '赛题数据发布/赛道一/基本面数据/基本面数据_利润.csv'
    - '赛题数据发布/赛道一/基本面数据/基本面数据_需求.csv'

# --- 3. 特征工程与预处理 ---
## brent T_5
brent_T_5_pipeline: *base_global_pipeline

## brent T_10
brent_T_10_pipeline: *base_global_pipeline

## brent T_20
brent_T_20_pipeline: *base_global_pipeline

## sc T_5
sc_T_5_pipeline: *base_global_pipeline

## sc T_10
sc_T_10_pipeline: *base_global_pipeline

## sc T_20
sc_T_20_pipeline: *base_global_pipeline

## wti T_5
wti_T_5_pipeline: *base_global_pipeline

## wti T_10
wti_T_10_pipeline: *base_global_pipeline

## wti T_20
wti_T_20_pipeline: *base_global_pipeline

# --- 4. 数据集构建 ---
test_split_ratio: 0.2

# --- 5. 模型训练 ---
model:
  type: 'xgboost' # 将来可以支持 'lightgbm', 'catboost' 等
  params:
    n_estimators: 1000
    max_depth: 8
    learning_rate: 0.05
    subsample: 0.8
    colsample_bytree: 0.8
    objective: 'reg:squarederror'
    eval_metric: 'rmse'
    seed: 42
    n_jobs: -1
    tree_method: 'hist' # 使用CPU时，可改为 'auto' 或注释掉 device
    device: 'cuda'
  # type: 'catboost'
  # params:
  #   iterations: 1000
  #   learning_rate: 0.05
  #   depth: 8
  #   l2_leaf_reg: 3
  #   random_seed: 42
  #   loss_function: 'RMSE'
  #   eval_metric: 'RMSE'
  #   early_stopping_rounds: 100
  #   verbose: 100
  #   task_type: 'GPU'
  #   devices: 'cuda'
  # type: 'lightgbm'
  # params:
  #   n_estimators: 1000
  #   max_depth: 8
  #   learning_rate: 0.05
  #   subsample: 0.8          # same as bagging_fraction
  #   colsample_bytree: 0.8
  #   objective: 'regression'
  #   metric: 'rmse'
  #   random_state: 42
  #   n_jobs: -1
  #   device: 'gpu'           # or 'cpu'
  #   boosting_type: 'gbdt'   # standard boosting
  # type: 'adaboost'
  # params:
  #   n_estimators: 1000
  #   max_depth: 8
  #   learning_rate: 0.05
  #   subsample: 0.8
  #   colsample_bytree: 0.8
  #   objective: 'reg:squarederror'
  #   eval_metric: 'rmse'
  #   seed: 42
  #   n_jobs: -1
  #   tree_method: 'hist' # 使用CPU时，可改为 'auto' 或注释掉 device
  #   device: 'cuda'
